#!/bin/bash

# Command to simulate realpath
if [ -z "${COMPSS_HOME}" ]; then
  COMPSS_HOME="$( cd "$( dirname "${BASH_SOURCE[0]}" )"/../../.. && pwd )/"
fi
if [ ! "${COMPSS_HOME: -1}" = "/" ]; then
  COMPSS_HOME="${COMPSS_HOME}/"
fi
export COMPSS_HOME=${COMPSS_HOME}

# Load auxiliar scripts
source "${COMPSS_HOME}Runtime/scripts/system/runtime/compss_setup.sh"

source "${COMPSS_HOME}Runtime/scripts/system/commons/version.sh"
source "${COMPSS_HOME}Runtime/scripts/system/agents/commons.sh"

#---------------------------------------------------------------------------------------
# SCRIPT CONSTANTS DECLARATION
#---------------------------------------------------------------------------------------
APP_CMD="curl"
DEFAULT_AGENT_NODE="localhost"
DEFAULT_AGENT_PORT="46101"


#---------------------------------------------------------------------------------------
# ERROR CONSTANTS DECLARATION
#---------------------------------------------------------------------------------------
ERROR_NO_TARGET_HOST="Target host not specified."

#---------------------------------------------------------------------------------------
# GENERIC HELPER FUNCTIONS
#---------------------------------------------------------------------------------------

###############################################
# Displays usage
###############################################
usage() {
  SCRIPT_NAME=$(basename "$0")
  cat <<EOT
Usage: ${SCRIPT_NAME} [options] resource_name [<adaptor_property_name=adaptor_property_value>]

* Options:
  General:
    --help, -h                              Print this help message

    --opts                                  Show available options

    --version, -v                           Print COMPSs version

    --agent_node=<string>                   Name of the node where to add the resource
                                            Default: ${DEFAULT_AGENT_NODE}

    --agent_port=<string>                   Port of the node where to add the resource
                                            Default: ${DEFAULT_AGENT_PORT}
EOT
}

###############################################
# Displays errors when treating arguments
###############################################
display_invocation() {
  display_info "Target agent details: 
      Host:                     ${agent_node} 
      Port:                     ${agent_port} 
  
  Lost agent details: 
      Resource Name:            ${resource_node}"
  
}

#---------------------------------------------------------------------------------------
# MAIN FUNCTIONS
#---------------------------------------------------------------------------------------
###############################################
# Function to get the arguments
###############################################
get_args() {
  # Parse COMPSs Options
  while getopts hvgtmd-: flag; do
    # Treat the argument
    case "$flag" in
      h)
        # Display help
        usage 0
        ;;
      v)
        # Display version
        show_version
        exit 0
        ;;
      -)
      # Check more complex arguments
      case "$OPTARG" in
        help)
          # Display help
          usage 0
          ;;
        version)
          # Display version
          show_full_version
          exit 0
          ;;
        opts)
          # Display options
          show_opts 0
          ;;
        agent_node=*)
          agent_node=${OPTARG//agent_node=/}
          ;;
        agent_port=*)
          agent_port=${OPTARG//agent_port=/}
          ;;
        *)
          # Flag didn't match any patern. Add to COMPSs
          args_pass="$args_pass --$OPTARG"
          ;;
      esac
      ;;
    *)
      # Flag didn't match any patern. End of description flags
      ;;
    esac
  done

  options_index=$((OPTIND))
}

###############################################
# Function to check the arguments
###############################################
check_args() {
  
  if [ -z "${agent_node}" ]; then
    agent_node=${DEFAULT_AGENT_NODE}
  fi
  if [ -z "${agent_port}" ]; then
    agent_port=${DEFAULT_AGENT_PORT}
  fi
}
###############################################
# Agent Invocation
###############################################
notify_lost_node() {
  ${APP_CMD} "-s" "-XPUT" "http://${agent_node}:${agent_port}/COMPSs/lostNode" -H 'content-type: application/xml' -d "\
<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>
<lostNode>
  <workerName>${resource_node}</workerName>
</lostNode>"

}


###############################################
# Agent Invocation
###############################################
get_args "$@"
check_args "$@"
shift $((options_index - 1))
 
if [ $# -eq 0 ]; then
  display_error "${ERROR_NO_TARGET_HOST}"
  usage
  exit
fi

resource_node=${1}
shift 1

display_invocation
notify_lost_node
