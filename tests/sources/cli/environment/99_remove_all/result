#!/bin/bash -e

  # # Obtain parameters
  output_file=$1
  error_file=$2

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f "${output_file}" ]; then
     result_expected="Environment \`default\` is now active
Deleting environment \`cluster_env\`...
Deleting environment \`docker_env\`...
Deleting environment \`local_env\`...
ERROR: \`default\` environment is required and cannot be deleted"
     test_result=$(cat "${output_file}")
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "OUTPUT RESULT NOT AS EXPECTED." | tee -a "${output_file}"
        exit 1
     fi

     # Check if directory `local_env` exists in `~/.COMPSs/envs`
     if [ -d "${HOME}/.COMPSs/envs/local_env" ]; then
         echo "[ERROR] Directory `local_env` is still in `~/.COMPSs/envs`" | tee -a "${output_file}"
         exit 1
     fi

     # Check if directory `docker_env` exists in `~/.COMPSs/envs`
     if [ -d "${HOME}/.COMPSs/envs/docker_env" ]; then
         echo "[ERROR] Directory `docker_env` is still in `~/.COMPSs/envs`" | tee -a "${output_file}"
         exit 1
     fi

     # Check if directory `cluster_env` exists in `~/.COMPSs/envs`
     if [ -d "${HOME}/.COMPSs/envs/cluster_env" ]; then
         echo "[ERROR] Directory `cluster_env` is still in `~/.COMPSs/envs`" | tee -a "${output_file}"
         exit 1
     fi
  else
     echo "[ERROR] Output file not found" | tee -a "${output_file}"
     exit 1
  fi
  # Check that ErrorManager has not raised any ERROR or FATAL message
  if [ -f "${error_file}" ]; then
    if grep -E "\\[ERRMGR\\].*(ERROR|FATAL|Shutting down COMPSs)" "${error_file}"; then
      echo "ERROR: ErrorManager has raised a fatal error" | tee -a "${output_file}"
      exit 1
    fi
  fi

    

  #----------------------------------------------------------------------------------
  # Success
  exit 0

