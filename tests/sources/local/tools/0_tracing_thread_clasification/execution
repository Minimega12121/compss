#!/bin/bash
# Obtain parameters
COMPSs_exec=$1
comm=$2
runcompss_opts=$3
base_app_dir=$4
COMPSs_log_folder=$5
target_log_folder=$6
retry_num=$7
execution_envs=$8

# Global variables
exit_value=0
jar_name="0_tracing_thread_clasification.jar"
app_name="tracing.DemoClass"
AGENT_PIDS=""
NUM_RETRIES="50"

#----------------------------------------------------------------------------------
# Generate Project.xml according to system
sed -i '/<InstallDir>/c<InstallDir>'"${COMPSS_HOME}"'<\/InstallDir>' "${base_app_dir}"/project.xml

#----------------------------------------------------------------------------------
# Create all working dir folders
mkdir -p /tmp/COMPSsWorker01/

#----------------------------------------------------------------------------------
# Run application
echo
echo "*** RUNNING THREAD CLASSIFICATION TRACING TEST"

# ---------------------------------------
# -------- RUNCOMPSS EXECUTION ----------
# ---------------------------------------
output_log="${target_log_folder}/tracing_0${retry_num}.outputlog"
error_log="${target_log_folder}/tracing_0${retry_num}.errorlog"
touch "${output_log}"
touch "${error_log}"
expectedTime=240s
tasks=10

# shellcheck disable=SC2086
timeout --signal=2 $expectedTime "${COMPSs_exec}" \
    --project="${base_app_dir}"/project.xml \
    --resources="${base_app_dir}"/resources.xml \
    \
    --comm="$comm" \
    \
    --debug \
    --tracing=true \
    --trace_label=test \
    ${runcompss_opts} \
    \
    --classpath="${base_app_dir}/${jar_name}" \
    \
    "tracing.DemoClass" $tasks > >(tee "${output_log}") 2> >(tee "${error_log}" >&2)




# ---------------------------------------
# ---------- AGENTS EXECUTION -----------
# ---------------------------------------
# Traps and Handlers
function kill_agents() {
    for pid in ${AGENT_PIDS}; do
        kill -SIGINT ${pid} 1>/dev/null 2>/dev/null
    done
}
trap kill_agents EXIT

# ---------------------------------------
# ---------- STARTING AGENTS ------------
# ---------------------------------------
log_dir="${COMPSs_log_folder}/agentsExecution/${app_name}_0${retry_num}"
agent1_log_dir="${log_dir}/agent1/"
mkdir -p "${agent1_log_dir}" 
agent1_output_log="${log_dir}/agent1.outputlog"
agent1_error_log="${log_dir}/agent1.errorlog"

compss_agent_start \
    --hostname="COMPSsWorker01" \
    --classpath="${base_app_dir}/${jar_name}" \
    --log_dir="${agent1_log_dir}" \
    --rest_port="46101" \
    --comm_port="46102" \
    --reuse_resources_on_block="false" \
    --debug \
    --tracing=true \
    ${runcompss_opts} \
    --project="${base_app_dir}/project_agent.xml" \
    --resources="${base_app_dir}/resources_agent.xml" 1>"${agent1_output_log}" 2>"${agent1_error_log}" &

agent_pid="$!"
AGENT_PIDS="${AGENT_PIDS} ${agent_pid}"

sleep 5

retries="${NUM_RETRIES}"
curl -XGET http://127.0.0.1:46101/COMPSs/test 1>/dev/null 2>/dev/null
exit_value=$?
while [ ! "${exit_value}" == "0" ] && [ "${retries}" -gt "0" ]; do
    sleep 1
    retries=$((retries - 1 ))
    curl -XGET http://127.0.0.1:46101/COMPSs/test 1>/dev/null 2>/dev/null
    exit_value=$?
done

RESULT=$(grep "test invoked" "${agent1_output_log}")
if [ -z "${RESULT}" ]; then  
    echo "Agent 1 failed to start" > >(tee -a "${error_log}")
    exit 1
fi
echo "Agent 1 started" > >(tee -a "${output_log}")

RESOURCES=$(curl -XGET http://127.0.0.1:46101/COMPSs/resources 2>/dev/null)

"${COMPSS_HOME}/Runtime/scripts/user/compss_agent_call_operation" \
    --master_node="127.0.0.1" \
    --master_port="46101" \
    --cei="tracing.DemoClassItf" \
    --stop \
    "tracing.DemoClass" $tasks > >(tee -a "${output_log}") 2> >(tee -a "${error_log}")

sleep 3

if [ ! "$?" == "0" ]; then
    echo "Could not invoke main method." > >(tee -a "${error_log}")
    exit 1
fi
echo "main function invoked" > >(tee -a "${output_log}")

retries="3"
while [ ! -f "${agent1_log_dir}/jobs/job1_NEW.out" ] && [ "${retries}" -gt "0" ]; do
    sleep 1
    retries=$((retries - 1 ))
done
if [ ! -f "${agent1_log_dir}/jobs/job1_NEW.out" ]; then
    echo "Could not invoke main method." > >(tee -a "${error_log}")
    exit 1
fi
sleep 1
method_name=$( grep "Executing" "${agent1_log_dir}/jobs/job1_NEW.out" | awk '{print $2}')
echo method_name $method_name
if [ ! "${method_name}" == "main" ]; then
    echo "Could not invoke main method." > >(tee -a "${error_log}")
    exit 1
fi
echo  "main method properly started" > >(tee -a "${output_log}")
sleep 2

# Check timeout
exit_code=$?
if [[ "${exit_code}" = "124" ]]; then
    # Copy LOG files
    cp -rf "${COMPSs_log_folder}/${app_name}_0${retry_num}"/* "${target_log_folder}"
    
    # Report time out
    echo "[WARNING] Java Application timed out" >> "${output_log}"
    exit_value=124
else
    #echo "Application finished with value ${exit_code}. Checking results" 	  
    # Copy LOG files
    cp -rf "${COMPSs_log_folder}/${app_name}_0${retry_num}"/* "${target_log_folder}"

    # Check result
    python "${base_app_dir}"/result.py "${COMPSs_log_folder}/${app_name}_0${retry_num}/trace" "${COMPSs_log_folder}/agentsExecution/${app_name}_0${retry_num}/agent1/trace"
    exit_value=$?
    echo "Result script finished with value ${exit_value}"
fi

#----------------------------------------------------------------------------------
# Return execution status
exit ${exit_value}
